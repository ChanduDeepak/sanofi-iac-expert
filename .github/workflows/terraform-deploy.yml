name: Terraform Deploy (Dev/Prod)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod
      region:
        description: 'Target region'
        required: true
        default: 'eastus2'
        type: choice
        options:
          - eastus2
          - westus2
      stack:
        description: 'Which stack to deploy?'
        required: true
        default: '1_rg'
        type: choice
        options:
          - 1_rg
          - 2_network
          - 3_storage
          - all
      action:
        description: 'Terraform Action'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply

jobs:
  terraform:
    name: Deploy ${{ github.event.inputs.stack }} (${{ github.event.inputs.environment }} | ${{ github.event.inputs.region }})
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Variables
        id: vars
        run: |
          echo "STACK=${{ github.event.inputs.stack }}" >> $GITHUB_ENV
          echo "REGION=${{ github.event.inputs.region }}" >> $GITHUB_ENV
          echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          echo "ACTION=${{ github.event.inputs.action }}" >> $GITHUB_ENV

      - name: Terraform Init, Plan/Apply
        run: |
          STACK_DIR="app/stacks/${STACK}"
          VAR_FILE="${STACK_DIR}/tfvars/${REGION}/${ENVIRONMENT}.tfvars"

          echo "Running terraform in $STACK_DIR with var-file: $VAR_FILE"

          cd $STACK_DIR
          terraform init -upgrade
          terraform validate

          if [[ "$ACTION" == "plan" ]]; then
            terraform plan -var-file="$VAR_FILE"
          elif [[ "$ACTION" == "apply" ]]; then
            terraform apply -auto-approve -var-file="$VAR_FILE"
          else
            echo "Unknown action: $ACTION"
            exit 1
          fi