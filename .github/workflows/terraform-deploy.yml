name: Terraform Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod
      region:
        description: 'Target region'
        required: true
        default: 'eastus2'
        type: choice
        options:
          - eastus2
          - westus2
      stack:
        description: 'Stack to deploy'
        required: true
        default: '1_rg'
        type: choice
        options:
          - 1_rg
          - 2_network
          - 3_storage
          - 4_compute
          - all
      action:
        description: 'Terraform action'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply

jobs:
  terraform:
    name: Deploy to ${{ github.event.inputs.environment }} (${{ github.event.inputs.region }})
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Variables
        id: set-vars
        run: |
          echo "STACK=${{ github.event.inputs.stack }}" >> $GITHUB_ENV
          echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          echo "REGION=${{ github.event.inputs.region }}" >> $GITHUB_ENV
          echo "ACTION=${{ github.event.inputs.action }}" >> $GITHUB_ENV

      - name: Run Terraform
        run: |
          set -e
          
          STACK_DIR="app/stacks/${STACK}"
          VAR_FILE="tfvars/${REGION}/${ENVIRONMENT}.tfvars"

          echo "üì¶ Stack:      ${STACK}"
          echo "üåç Environment: ${ENVIRONMENT}"
          echo "üìç Region:     ${REGION}"
          echo "üîß Action:     ${ACTION}"
          echo "üìÇ Directory:  ${STACK_DIR}"
          echo "üìÑ Var file:   ${VAR_FILE}"

          if [[ "${STACK}" == "all" ]]; then
            for dir in app/stacks/*/; do
              cd "$dir"
              echo "üöÄ Running in stack: $(basename $dir)"
              terraform init -upgrade
              terraform validate
              if [[ "${ACTION}" == "plan" ]]; then
                terraform plan -var-file="tfvars/${REGION}/${ENVIRONMENT}.tfvars"
              elif [[ "${ACTION}" == "apply" ]]; then
                terraform apply -auto-approve -var-file="tfvars/${REGION}/${ENVIRONMENT}.tfvars"
              fi
              cd - > /dev/null
            done
          else
            cd "${STACK_DIR}"
            terraform init -upgrade
            terraform validate
            if [[ "${ACTION}" == "plan" ]]; then
              terraform plan -var-file="${VAR_FILE}"
            elif [[ "${ACTION}" == "apply" ]]; then
              terraform apply -auto-approve -var-file="${VAR_FILE}"
            else
              echo "‚ùå Unknown action: ${ACTION}"
              exit 1
            fi
          fi