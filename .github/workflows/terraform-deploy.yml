name: Terraform Deploy (Dev/Prod)

on:
  workflow_dispatch:
    inputs:
      stack:
        description: 'Stack to deploy'
        required: true
        default: '1_rg'
        type: choice
        options:
          - 1_rg
          - 2_network
          - 3_storage
          - 4_compute
          - all
      environment:
        description: 'Target environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod
      region:
        description: 'Target region'
        required: true
        default: 'eastus2'
        type: choice
        options:
          - eastus2
          - westus2
      action:
        description: 'Terraform action'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply

jobs:
  terraform:
    name: Run Terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Set Variables
        run: |
          echo "STACK=${{ github.event.inputs.stack }}" >> $GITHUB_ENV
          echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          echo "REGION=${{ github.event.inputs.region }}" >> $GITHUB_ENV
          echo "ACTION=${{ github.event.inputs.action }}" >> $GITHUB_ENV

      - name: Run Terraform for selected stack(s)
        run: |
          run_tf () {
            STACK_PATH="app/stacks/$1"
            TFVARS_PATH="$STACK_PATH/tfvars/$REGION/$ENVIRONMENT.tfvars"

            echo "ðŸš€ Running Terraform $ACTION on $1 with vars: $TFVARS_PATH"
            cd $STACK_PATH
            terraform init -input=false
            terraform validate
            terraform $ACTION -var-file="$TFVARS_PATH"
            cd -
          }

          if [ "$STACK" = "all" ]; then
            run_tf 1_rg
            run_tf 2_network
            run_tf 3_storage
            run_tf 4_compute
          else
            run_tf $STACK
          fi