name: Terraform Deploy

on:
  workflow_dispatch:
    inputs:
      stack:
        description: 'Which stack to deploy (e.g., 1_rg, 2_network, 3_storage, all)'
        required: true
        default: 'all'
        type: choice
        options:
          - 1_rg
          - 2_network
          - 3_storage
          - all
      action:
        description: 'Terraform Action'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - plan_and_apply
      environment:
        description: 'Target environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod
      region:
        description: 'Target region'
        required: true
        default: 'eastus2'
        type: choice
        options:
          - eastus2
          - westus2

jobs:
  terraform:
    name: Deploy ${{ github.event.inputs.stack }} to ${{ github.event.inputs.environment }} in ${{ github.event.inputs.region }}
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Run Terraform Steps
        run: |
          set -e
          echo "STACK: ${{ github.event.inputs.stack }}"
          echo "ENV: ${{ github.event.inputs.environment }}"
          echo "REGION: ${{ github.event.inputs.region }}"
          echo "ACTION: ${{ github.event.inputs.action }}"

          # Convert values to lowercase
          STACK="${{ github.event.inputs.stack }}"
          ENV="${{ github.event.inputs.environment }}"
          REGION="${{ github.event.inputs.region }}"
          ACTION="${{ github.event.inputs.action }}"

          run_terraform() {
            echo "==> Running in app/stacks/$1"
            cd app/stacks/$1

            terraform init -backend-config="../../providers/backend-$REGION-$ENV.tfvars"

            terraform validate

            terraform plan -var-file=tfvars/$REGION/$ENV.tfvars

            if [[ "$ACTION" == "apply" || "$ACTION" == "plan_and_apply" ]]; then
              terraform apply -auto-approve -var-file=tfvars/$REGION/$ENV.tfvars