name: Terraform Deploy (Dev/Prod)

on:
  workflow_dispatch:
    inputs:
      stack:
        description: 'Stack to deploy (e.g., 1_rg, 2_network)'
        required: true
        default: '1_rg'
      environment:
        description: 'Target environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod
      region:
        description: 'Target region'
        required: true
        default: 'eastus2'
        type: choice
        options:
          - eastus2
          - westus2
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply

jobs:
  terraform:
    name: Deploy to ${{ github.event.inputs.environment }} - ${{ github.event.inputs.stack }}
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Set variables
        id: vars
        run: |
          echo "STACK=${{ github.event.inputs.stack }}" >> $GITHUB_ENV
          echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          echo "REGION=${{ github.event.inputs.region }}" >> $GITHUB_ENV
          echo "ACTION=${{ github.event.inputs.action }}" >> $GITHUB_ENV

      - name: Run Terraform
        run: |
          STACK_DIR="app/stacks/${STACK}"
          VAR_FILE="${STACK_DIR}/tfvars/${REGION}/${ENVIRONMENT}.tfvars"

          echo "üì¶ Stack:      ${STACK}"
          echo "üåç Environment: ${ENVIRONMENT}"
          echo "üìç Region:     ${REGION}"
          echo "üîß Action:     ${ACTION}"
          echo "üìÇ Directory:  ${STACK_DIR}"
          echo "üìÑ Var file:   ${VAR_FILE}"

          if [ ! -f "${VAR_FILE}" ]; then
            echo "‚ùå ERROR: Variable file ${VAR_FILE} does not exist."
            exit 1
          fi

          cd "${STACK_DIR}"

          terraform init -upgrade
          terraform validate

          if [[ "${ACTION}" == "plan" ]]; then
            terraform plan -var-file="${VAR_FILE}"
          elif [[ "${ACTION}" == "apply" ]]; then
            terraform apply -auto-approve -var-file="${VAR_FILE}"
          else
            echo "‚ùå Unknown action: ${ACTION}"
            exit 1
          fi