name: Terraform Deploy (Dev/Prod)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod
      region:
        description: 'Target region'
        required: true
        default: 'eastus2'
        type: choice
        options:
          - eastus2
          - westus2
      stack:
        description: 'Stack to deploy'
        required: true
        default: '1_rg'
        type: choice
        options:
          - 1_rg
          - 2_network
          - 3_storage
          - all
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply

jobs:
  terraform:
    name: Deploy to ${{ github.event.inputs.environment }} - ${{ github.event.inputs.stack }}
    runs-on: ubuntu-latest
    env:
      ENV_NAME: ${{ github.event.inputs.environment }}
      REGION_NAME: ${{ github.event.inputs.region }}
      STACK_NAME: ${{ github.event.inputs.stack }}
      TF_ACTION: ${{ github.event.inputs.action }}
      ARM_CLIENT_ID: ${{ secrets[format('ARM_CLIENT_ID_{0}', github.event.inputs.environment)] }}
      ARM_CLIENT_SECRET: ${{ secrets[format('ARM_CLIENT_SECRET_{0}', github.event.inputs.environment)] }}
      ARM_SUBSCRIPTION_ID: ${{ secrets[format('ARM_SUBSCRIPTION_ID_{0}', github.event.inputs.environment)] }}
      ARM_TENANT_ID: ${{ secrets[format('ARM_TENANT_ID_{0}', github.event.inputs.environment)] }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Run Terraform
        run: |
          set -e
          STACKS=($STACK_NAME)
          if [ "$STACK_NAME" == "all" ]; then
            STACKS=("1_rg" "2_network" "3_storage")
          fi

          for stack in "${STACKS[@]}"; do
            echo "üì¶ Stack:      $stack"
            echo "üåç Environment: $ENV_NAME"
            echo "üìç Region:     $REGION_NAME"
            echo "üîß Action:     $TF_ACTION"
            echo "üìÇ Directory:  app/stacks/$stack"
            echo "üìÑ Var file:   tfvars/${REGION_NAME}/${ENV_NAME}.tfvars"

            cd app/stacks/$stack
            terraform init -input=false
            terraform validate
            terraform fmt -recursive           # üîß Auto format
            terraform fmt -recursive -check -diff   # ‚úÖ Enforce formatting
            terraform $TF_ACTION -var-file=tfvars/${REGION_NAME}/${ENV_NAME}.tfvars
            cd -
          done
